from datetime import datetime, time

class Scheduler:
    """‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡πà‡∏≤‡∏á"""

    def __init__(self):
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á list ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏é‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
        # ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: (day_of_week, start_time, end_time)
        # day_of_week: 0=‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå, 1=‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£, ..., 6=‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå ‡∏´‡∏£‡∏∑‡∏≠ None=‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô
        self.availability_rules = []

    def add_availability(self, day_of_week, start_time, end_time):
        """
        ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏é‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
        - day_of_week: ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå (0-6) ‡∏´‡∏£‡∏∑‡∏≠ None ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô
        - start_time: ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡πÉ‡∏ä‡πâ ƒë·ªëi t∆∞·ª£ng time)
        - end_time: ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î (‡πÉ‡∏ä‡πâ ƒë·ªëi t∆∞·ª£ng time)
        """
        rule = (day_of_week, start_time, end_time)
        self.availability_rules.append(rule)
        print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏é‡πÉ‡∏´‡∏°‡πà: {'‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô' if day_of_week is None else f'‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {day_of_week}'} ‡πÄ‡∏ß‡∏•‡∏≤ {start_time} - {end_time}")

    def is_available(self, check_datetime):
        """
        ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏ (check_datetime) ‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        - check_datetime: ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö (‡πÉ‡∏ä‡πâ ƒë·ªëi t∆∞·ª£ng datetime)
        """
        check_day = check_datetime.weekday() # 0=‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå, ..., 6=‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå
        check_time = check_datetime.time()

        # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Å‡∏Å‡∏é‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠
        for day_rule, start_time, end_time in self.availability_rules:
            # ‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
            # ‡∏ñ‡πâ‡∏≤‡∏Å‡∏é‡πÄ‡∏õ‡πá‡∏ô '‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô' (None) ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ß‡∏±‡∏ô‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≠
            day_matches = (day_rule is None) or (day_rule == check_day)

            if day_matches:
                # ‡πÄ‡∏ä‡πá‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤
                if start_time <= check_time < end_time:
                    return True # ‡πÄ‡∏à‡∏≠‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß

        return False # ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏é‡∏Ç‡πâ‡∏≠‡πÑ‡∏´‡∏ô‡πÄ‡∏•‡∏¢

# --- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ---
if __name__ == "__main__":
    # 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤
    my_scheduler = Scheduler()

    # 2. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏é‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    # ‡∏ß‡πà‡∏≤‡∏á "‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô" ‡πÄ‡∏ß‡∏•‡∏≤ 18:00 ‡∏ñ‡∏∂‡∏á 20:00
    my_scheduler.add_availability(None, time(18, 0), time(20, 0))

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏é‡∏≠‡∏∑‡πà‡∏ô: ‡∏ß‡πà‡∏≤‡∏á "‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò" (weekday=2) ‡πÄ‡∏ß‡∏•‡∏≤ 10:00 ‡∏ñ‡∏∂‡∏á 12:00
    my_scheduler.add_availability(2, time(10, 0), time(12, 0))
    
    print("\n--- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ---")

    # 3. ‡∏•‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
    # ‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò ‡πÄ‡∏ß‡∏•‡∏≤ 19:00 -> ‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞ "‡∏ß‡πà‡∏≤‡∏á" (‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏é‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô)
    time_to_check1 = datetime(2025, 10, 15, 19, 0)
    print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πá‡∏Å {time_to_check1}: ‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? üëâ {my_scheduler.is_available(time_to_check1)}")

    # ‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò ‡πÄ‡∏ß‡∏•‡∏≤ 21:00 -> ‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞ "‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á"
    time_to_check2 = datetime(2025, 10, 15, 21, 0)
    print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πá‡∏Å {time_to_check2}: ‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? üëâ {my_scheduler.is_available(time_to_check2)}")

    # ‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ ‡πÄ‡∏ß‡∏•‡∏≤ 18:30 -> ‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞ "‡∏ß‡πà‡∏≤‡∏á" (‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏é‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô)
    time_to_check3 = datetime(2025, 10, 16, 18, 30)
    print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πá‡∏Å {time_to_check3}: ‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? üëâ {my_scheduler.is_available(time_to_check3)}")
    
    # ‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò ‡πÄ‡∏ß‡∏•‡∏≤ 11:00 -> ‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞ "‡∏ß‡πà‡∏≤‡∏á" (‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏é‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò)
    time_to_check4 = datetime(2025, 10, 15, 11, 0)
    print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πá‡∏Å {time_to_check4}: ‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? üëâ {my_scheduler.is_available(time_to_check4)}")

    # ‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£ ‡πÄ‡∏ß‡∏•‡∏≤ 11:00 -> ‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞ "‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á" (‡∏Å‡∏é 10:00-12:00 ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
    time_to_check5 = datetime(2025, 10, 14, 11, 0)
    print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πá‡∏Å {time_to_check5}: ‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? üëâ {my_scheduler.is_available(time_to_check5)}")